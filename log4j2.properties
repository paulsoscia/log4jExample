## Define the root logger with appender file
#log = /usr/home/log4j
#log=/home/jimb/JavaCode/log4jExample
#log4j.rootLogger = DEBUG, FILE

## Define the file appender
#log4j.appender.FILE=org.apache.log4j.FileAppender
#log4j.appender.FILE.File=${log}/log.out

## Define the layout for file appender
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILE.layout.conversionPattern=%m%n


###remove log4j2. as the prefix from all your properties so that log4j2.appender.console.type = Console becomes appender.console.type = Console
###add file logging to your rootlogger:
###rootLogger.appenderRef.rolling.ref = LogToFile

###################################################################################log4j2.properties vs log4j.properties 
###################################################################################
###################################################################################

# Set to debug or trace if log4j initialization is failing
##status = warn

# Name of the configuration
##name = ConsoleLogConfigDemo

# Console appender configuration
##appender.console.type = Console
##appender.console.name = consoleLogger
##appender.console.layout.type = PatternLayout
##appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Root logger level
##rootLogger.level = debug

# Root logger referring to console appender
##rootLogger.appenderRef.stdout.ref = consoleLogger

log4j2.properties
status = warn
name= RollingFileLogConfigDemo

# Log files location
property.basePath = /home/jimb/JavaCode/log4jExample

# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${basePath}/app.log
appender.rolling.filePattern= ${basePath}/app_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
appender.rolling.policies.type = Policies

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure root logger
rootLogger.level = debug
rootLogger.appenderRef.rolling.ref = fileLogger
